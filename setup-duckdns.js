#!/usr/bin/env node

const http = require('http');

console.log('ü¶Ü –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ —á–µ—Ä–µ–∑ DuckDNS');
console.log('=========================================');

console.log(`
üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:

1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://www.duckdns.org/
2Ô∏è‚É£ –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Google, GitHub –∏–ª–∏ –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç
3Ô∏è‚É£ –í –ø–æ–ª–µ "sub domain" –≤–≤–µ–¥–∏—Ç–µ: novadom
4Ô∏è‚É£ –í –ø–æ–ª–µ "current ip" —É–∫–∞–∂–∏—Ç–µ: 212.220.204.230
5Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ "add domain"

‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –í–∞—à —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:
   üåê http://novadom.duckdns.org:3000

‚è±Ô∏è  –í—Ä–µ–º—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: 1-5 –º–∏–Ω—É—Ç
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞
`);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–∞
function checkDomain(domain) {
    return new Promise((resolve) => {
        const options = {
            hostname: domain,
            port: 3000,
            path: '/',
            method: 'HEAD',
            timeout: 5000
        };

        const req = http.request(options, (res) => {
            console.log(`‚úÖ ${domain} –¥–æ—Å—Ç—É–ø–µ–Ω! –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
            resolve(true);
        });

        req.on('error', (err) => {
            console.log(`‚ùå ${domain} –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${err.message}`);
            resolve(false);
        });

        req.on('timeout', () => {
            console.log(`‚è∞ ${domain} —Ç–∞–π–º–∞—É—Ç`);
            req.destroy();
            resolve(false);
        });

        req.end();
    });
}

console.log('\nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ (–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DuckDNS):');
console.log('============================================================');

async function testDomains() {
    const domains = [
        'novadom.duckdns.org'
    ];

    for (const domain of domains) {
        console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è—é ${domain}...`);
        await checkDomain(domain);
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
    }
}

// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
if (process.argv.includes('--test')) {
    testDomains();
} else {
    console.log('\nüí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
    console.log('   node setup-duckdns.js --test');
}

console.log('\nüîß –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å CORS –≤ server.js!');
console.log('   –î–æ–±–∞–≤—å—Ç–µ: "http://novadom.duckdns.org:3000"'); 
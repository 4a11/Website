import { pool } from '../config/database.config';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü
const financeCategories = [
    { name: '–ê—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞', type: 'income', color: '#8b5cf6', icon: 'fa-building' },
    { name: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', type: 'income', color: '#10b981', icon: 'fa-shield-alt' },
    { name: '–ü–∞—Ä–∫–æ–≤–∫–∞', type: 'income', color: '#f59e0b', icon: 'fa-car' },
    { name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏', type: 'income', color: '#3b82f6', icon: 'fa-tools' },
    { name: '–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', type: 'expense', color: '#ef4444', icon: 'fa-server' },
    { name: '–ó–∞—Ä–ø–ª–∞—Ç–∞', type: 'expense', color: '#f97316', icon: 'fa-users' },
    { name: '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', type: 'expense', color: '#06b6d4', icon: 'fa-bolt' },
    { name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', type: 'expense', color: '#ec4899', icon: 'fa-bullhorn' },
    { name: '–ö–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã', type: 'expense', color: '#84cc16', icon: 'fa-pen' },
    { name: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ —Å–≤—è–∑—å', type: 'expense', color: '#6366f1', icon: 'fa-wifi' }
];

const transactions = [
    { date: '2024-01-15', description: '–ê—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞ –∑–∞ —è–Ω–≤–∞—Ä—å', category: '–ê—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞', type: 'income', amount: 450000 },
    { date: '2024-01-10', description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —Å–∏—Å—Ç–µ–º–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', category: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', type: 'income', amount: 125000 },
    { date: '2024-01-20', description: '–ê—Ä–µ–Ω–¥–∞ –ø–∞—Ä–∫–æ–≤–æ—á–Ω—ã—Ö –º–µ—Å—Ç', category: '–ü–∞—Ä–∫–æ–≤–∫–∞', type: 'income', amount: 85000 },
    { date: '2024-01-25', description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º', category: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏', type: 'income', amount: 95000 },
    { date: '2024-01-05', description: '–ü–æ–∫—É–ø–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', category: '–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', type: 'expense', amount: 180000 },
    { date: '2024-01-31', description: '–ó–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤', category: '–ó–∞—Ä–ø–ª–∞—Ç–∞', type: 'expense', amount: 320000 },
    { date: '2024-01-28', description: '–û–ø–ª–∞—Ç–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞ –∏ –æ—Ç–æ–ø–ª–µ–Ω–∏—è', category: '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', type: 'expense', amount: 45000 },
    { date: '2024-01-12', description: '–†–µ–∫–ª–∞–º–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö', category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', type: 'expense', amount: 25000 },
    { date: '2024-01-08', description: '–ü–æ–∫—É–ø–∫–∞ –∫–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏—Ö –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–µ–π', category: '–ö–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã', type: 'expense', amount: 8500 },
    { date: '2024-01-03', description: '–û–ø–ª–∞—Ç–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏ –º–æ–±–∏–ª—å–Ω–æ–π —Å–≤—è–∑–∏', category: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ —Å–≤—è–∑—å', type: 'expense', amount: 15000 },
    { date: '2024-02-01', description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', category: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', type: 'income', amount: 75000 },
    { date: '2024-02-05', description: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ü–û', category: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏', type: 'income', amount: 45000 },
    { date: '2024-02-10', description: '–ü–æ–∫—É–ø–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–Ω—Ç–µ—Ä–∞', category: '–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', type: 'expense', amount: 35000 },
    { date: '2024-02-15', description: '–ê—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞ –∑–∞ —Ñ–µ–≤—Ä–∞–ª—å', category: '–ê—Ä–µ–Ω–¥–∞ –æ—Ñ–∏—Å–∞', type: 'income', amount: 450000 },
    { date: '2024-02-20', description: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è', category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', type: 'expense', amount: 40000 }
];

const budgets = [
    {
        name: '–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã',
        category: '–ó–∞—Ä–ø–ª–∞—Ç–∞',
        period: 'month',
        limit_amount: 350000,
        spent: 320000,
        start_date: '2024-01-01',
        end_date: '2024-01-31'
    },
    {
        name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç',
        category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
        period: 'quarter',
        limit_amount: 150000,
        spent: 65000,
        start_date: '2024-01-01',
        end_date: '2024-03-31'
    },
    {
        name: '–†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
        category: '–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
        period: 'year',
        limit_amount: 500000,
        spent: 215000,
        start_date: '2024-01-01',
        end_date: '2024-12-31'
    },
    {
        name: '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
        category: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏',
        period: 'quarter',
        limit_amount: 200000,
        spent: 140000,
        start_date: '2024-01-01',
        end_date: '2024-03-31'
    },
    {
        name: '–§–æ–Ω–¥ –æ–ø–ª–∞—Ç—ã —Ç—Ä—É–¥–∞',
        category: '–ó–∞—Ä–ø–ª–∞—Ç–∞',
        period: 'year',
        limit_amount: 4000000,
        spent: 640000,
        start_date: '2024-01-01',
        end_date: '2024-12-31'
    }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
export const seedFinanceData = async (): Promise<void> => {
    const client = await pool.connect();
    
    try {
        await client.query('BEGIN');
        
        console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
        
        // –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        await client.query('DELETE FROM budgets');
        await client.query('DELETE FROM transactions');
        await client.query('DELETE FROM finance_categories');
        
        // –°–±—Ä–æ—Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        await client.query('ALTER SEQUENCE finance_categories_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE transactions_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE budgets_id_seq RESTART WITH 1');
        
        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        console.log('üìÇ –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
        for (const category of financeCategories) {
            await client.query(
                'INSERT INTO finance_categories (name, type, color, icon) VALUES ($1, $2, $3, $4)',
                [category.name, category.type, category.color, category.icon]
            );
        }
        
        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        console.log('üí∞ –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
        for (const transaction of transactions) {
            await client.query(
                'INSERT INTO transactions (date, description, category, type, amount) VALUES ($1, $2, $3, $4, $5)',
                [transaction.date, transaction.description, transaction.category, transaction.type, transaction.amount]
            );
        }
        
        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–≤
        console.log('üìä –î–æ–±–∞–≤–ª—è–µ–º –±—é–¥–∂–µ—Ç—ã...');
        for (const budget of budgets) {
            await client.query(
                'INSERT INTO budgets (name, category, period, limit_amount, spent, start_date, end_date) VALUES ($1, $2, $3, $4, $5, $6, $7)',
                [budget.name, budget.category, budget.period, budget.limit_amount, budget.spent, budget.start_date, budget.end_date]
            );
        }
        
        await client.query('COMMIT');
        
        console.log('‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
        console.log(`   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${financeCategories.length}`);
        console.log(`   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions.length}`);
        console.log(`   - –ë—é–¥–∂–µ—Ç–æ–≤: ${budgets.length}`);
        
    } catch (error) {
        await client.query('ROLLBACK');
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        throw error;
    } finally {
        client.release();
    }
};

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    seedFinanceData()
        .then(() => {
            console.log('üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
            process.exit(0);
        })
        .catch((error) => {
            console.error('üí• –û—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
} 
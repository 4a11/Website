#!/usr/bin/env node

const http = require('http');
const https = require('https');

console.log('üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É');
console.log('====================================');

const EXTERNAL_IP = '212.220.204.230';
const PORT = 3000;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
function testConnection(url, timeout = 10000) {
    return new Promise((resolve) => {
        console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É—é: ${url}`);
        
        const isHttps = url.startsWith('https://');
        const client = isHttps ? https : http;
        
        const req = client.get(url, { timeout }, (res) => {
            console.log(`‚úÖ ${url} - –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
            console.log(`   –ó–∞–≥–æ–ª–æ–≤–∫–∏: ${JSON.stringify(res.headers, null, 2)}`);
            resolve({ success: true, status: res.statusCode, url });
        });
        
        req.on('error', (err) => {
            console.log(`‚ùå ${url} - –û—à–∏–±–∫–∞: ${err.message}`);
            resolve({ success: false, error: err.message, url });
        });
        
        req.on('timeout', () => {
            console.log(`‚è∞ ${url} - –¢–∞–π–º–∞—É—Ç (${timeout/1000}—Å)`);
            req.destroy();
            resolve({ success: false, error: 'Timeout', url });
        });
    });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å–æ–≤
async function checkPortOnline() {
    console.log('\nüåç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å—ã:');
    console.log('=====================================');
    
    const services = [
        `https://api.ipify.org/?format=json`, // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π IP
        `https://portchecker.co/check?ip=${EXTERNAL_IP}&port=${PORT}`,
    ];
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π IP
    try {
        const response = await fetch('https://api.ipify.org/?format=json');
        const data = await response.json();
        console.log(`üìç –í–∞—à —Ç–µ–∫—É—â–∏–π –≤–Ω–µ—à–Ω–∏–π IP: ${data.ip}`);
        
        if (data.ip === EXTERNAL_IP) {
            console.log('‚úÖ IP-–∞–¥—Ä–µ—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º');
        } else {
            console.log('‚ö†Ô∏è IP-–∞–¥—Ä–µ—Å –ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º!');
            console.log('   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS –∏–ª–∏ —Ä–æ—É—Ç–µ—Ä–∞');
        }
    } catch (error) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π IP:', error.message);
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testExternalAccess() {
    console.log(`üéØ –¶–µ–ª–µ–≤–æ–π IP: ${EXTERNAL_IP}`);
    console.log(`üîå –ü–æ—Ä—Ç: ${PORT}`);
    
    const testUrls = [
        `http://${EXTERNAL_IP}:${PORT}`,
        `http://${EXTERNAL_IP}:${PORT}/api/employees`,
        `http://${EXTERNAL_IP}:${PORT}/api/auth/verify`,
    ];
    
    console.log('\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:');
    console.log('============================');
    
    const results = [];
    
    for (const url of testUrls) {
        const result = await testConnection(url, 15000);
        results.push(result);
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å–∞–º–∏
    await checkPortOnline();
    
    // –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    console.log('\nüìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:');
    console.log('======================');
    
    const successful = results.filter(r => r.success);
    const failed = results.filter(r => !r.success);
    
    if (successful.length > 0) {
        console.log('\n‚úÖ –£—Å–ø–µ—à–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:');
        successful.forEach(r => {
            console.log(`   ${r.url} (${r.status})`);
        });
    }
    
    if (failed.length > 0) {
        console.log('\n‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:');
        failed.forEach(r => {
            console.log(`   ${r.url} - ${r.error}`);
        });
    }
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('================');
    
    if (successful.length === 0) {
        console.log('üîß –í—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ—É–¥–∞—á–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
        console.log('   1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–±—Ä–æ—Å–∞ –ø–æ—Ä—Ç–æ–≤ –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ');
        console.log('   2. –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä (npm run server)');
        console.log('   3. –û—Ç–∫—Ä—ã—Ç –ª–∏ –ø–æ—Ä—Ç –≤ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–µ Windows');
        console.log('   4. –ù–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ –ø—Ä–æ–≤–∞–π—Ç–µ—Ä –ø–æ—Ä—Ç 3000');
        console.log('   5. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å IP-–∞–¥—Ä–µ—Å–∞ 212.220.204.230');
        
        console.log('\nüõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:');
        console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: node test-connections.js');
        console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞: —Å–º. ROUTER-SETUP.md');
        console.log('   ‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä: .\firewall-setup.cmd (–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)');
    } else if (successful.length < results.length) {
        console.log('‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.');
        console.log('   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–∑–¥–∞—á—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤');
        console.log('   –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã API');
    } else {
        console.log('üéâ –í—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω—ã!');
        console.log(`   –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://${EXTERNAL_IP}:${PORT}`);
    }
    
    console.log('\nüåê –û–Ω–ª–∞–π–Ω-–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:');
    console.log('=========================');
    console.log(`   ‚Ä¢ https://www.yougetsignal.com/tools/open-ports/`);
    console.log(`   ‚Ä¢ https://portchecker.co/`);
    console.log(`   ‚Ä¢ https://canyouseeme.org/`);
    console.log(`   –í–≤–µ–¥–∏—Ç–µ IP: ${EXTERNAL_IP}, –ü–æ—Ä—Ç: ${PORT}`);
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testExternalAccess().catch(console.error); 
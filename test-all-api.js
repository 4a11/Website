const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

async function testAllAPI() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö API –º–∞—Ä—à—Ä—É—Ç–æ–≤...\n');

    try {
        // –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
        const authResponse = await axios.post(`${BASE_URL}/auth/login`, {
            username: 'admin',
            password: 'admin123'
        });
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');
        
        const token = authResponse.data.token;
        const headers = { Authorization: `Bearer ${token}` };

        // –¢–µ—Å—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...');
        const employeesResponse = await axios.get(`${BASE_URL}/employees`, { headers });
        console.log(`‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: ${employeesResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç –æ–±—ä–µ–∫—Ç–æ–≤
        console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±—ä–µ–∫—Ç–æ–≤...');
        const facilitiesResponse = await axios.get(`${BASE_URL}/facilities`, { headers });
        console.log(`‚úÖ –û–±—ä–µ–∫—Ç—ã: ${facilitiesResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
        console.log('\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è...');
        const equipmentResponse = await axios.get(`${BASE_URL}/equipment`, { headers });
        console.log(`‚úÖ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: ${equipmentResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π
        console.log('\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –Ω–æ–≤–æ—Å—Ç–µ–π...');
        const newsResponse = await axios.get(`${BASE_URL}/news`, { headers });
        console.log(`‚úÖ –ù–æ–≤–æ—Å—Ç–∏: ${newsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç –æ—Ç—á–µ—Ç–æ–≤
        console.log('\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ—Ç—á–µ—Ç–æ–≤...');
        const reportsResponse = await axios.get(`${BASE_URL}/reports`, { headers });
        console.log(`‚úÖ –û—Ç—á–µ—Ç—ã: ${reportsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–æ–≤
        console.log('\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–∞—Å—á–µ—Ç–æ–≤...');
        const calculationsResponse = await axios.get(`${BASE_URL}/calculations`, { headers });
        console.log(`‚úÖ –†–∞—Å—á–µ—Ç—ã: ${calculationsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç –æ—Ç–∑—ã–≤–æ–≤
        console.log('\n8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ—Ç–∑—ã–≤–æ–≤...');
        const reviewsResponse = await axios.get(`${BASE_URL}/reviews`, { headers });
        console.log(`‚úÖ –û—Ç–∑—ã–≤—ã: ${reviewsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        console.log('\n9. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏...');
        const feedbackResponse = await axios.get(`${BASE_URL}/feedback`, { headers });
        console.log(`‚úÖ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: ${feedbackResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        // –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
        console.log('\n10. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
        const settingsResponse = await axios.get(`${BASE_URL}/settings`, { headers });
        console.log(`‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏: ${settingsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

        console.log('\nüéâ –í—Å–µ API —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        console.log('\nüìã –°–≤–æ–¥–∫–∞ –¥–∞–Ω–Ω—ã—Ö:');
        console.log(`- –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: ${employeesResponse.data.length}`);
        console.log(`- –û–±—ä–µ–∫—Ç—ã: ${facilitiesResponse.data.length}`);
        console.log(`- –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: ${equipmentResponse.data.length}`);
        console.log(`- –ù–æ–≤–æ—Å—Ç–∏: ${newsResponse.data.length}`);
        console.log(`- –û—Ç—á–µ—Ç—ã: ${reportsResponse.data.length}`);
        console.log(`- –†–∞—Å—á–µ—Ç—ã: ${calculationsResponse.data.length}`);
        console.log(`- –û—Ç–∑—ã–≤—ã: ${reviewsResponse.data.length}`);
        console.log(`- –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: ${feedbackResponse.data.length}`);
        console.log(`- –ù–∞—Å—Ç—Ä–æ–π–∫–∏: ${settingsResponse.data.length}`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.response?.data || error.message);
    }
}

testAllAPI(); 